service: code-and-coffee-service
frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage}
  region: us-east-1
  stackName: code-and-coffee-service-${opt:stage}
  iam:
    role:
      permissionsBoundary: ${env:PERMISSION_BOUNDARY_ARN}
  httpApi:
    name: code-and-coffee-service-${opt:stage}
  logs:
    restApi: true

package:
  individually: true
  patterns:
    - "!*/**"
    - "!*"

functions:
  lambda:
    handler: build/bundle.handler
    timeout: 30
    package:
      patterns:
        - "./build/bundle.cjs"
    events:
      - httpApi:
          path: /{proxy+}
          method: get
      - httpApi:
          path: /{proxy+}
          method: post
      - httpApi:
          path: /{proxy+}
          method: delete
      - httpApi:
          path: /{proxy+}
          method: put
    environment:
      MEETUP_API_BASE_URL: ${env:MEETUP_API_BASE_URL}
      SETTINGS_BASE_URL: ${env:SETTINGS_BASE_URL}
      API_KEY: ${env:API_KEY}
      GH_API_BASE_URL: ${env:GH_API_BASE_URL}
      GH_AUTH_KEY: ${env:GH_AUTH_KEY}
      EMAIL_APP_URL: ${env:EMAIL_APP_URL}

resources:
  Description: Code and Coffee Service ${opt:stage}
  Resources:
    HttpApiStage:
      Properties:
        AccessLogSettings:
          DestinationArn: !GetAtt HttpApiLogGroup.Arn
          Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","routeKey":"$context.routeKey","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'
    HttpApiLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/http-api/code-and-coffee-service-${opt:stage}
        RetentionInDays: 7
    WebResourcesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: code-and-coffee-service-web-resources-${opt:stage}-${env:RANDOM_SEED}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
    WebResourcesBucketPolicy:
      Type: AWS::S3::BucketPolicy
      DeletionPolicy: Delete
      DependsOn:
        - WebResourcesBucket
      Properties:
        Bucket: code-and-coffee-service-web-resources-${opt:stage}-${env:RANDOM_SEED}
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action: "s3:GetObject"
              Resource: !Sub arn:aws:s3:::code-and-coffee-service-web-resources-${opt:stage}-${env:RANDOM_SEED}/*
    CloudFrontDistribution:
      Type: "AWS::CloudFront::Distribution"
      Properties:
        DistributionConfig:
          Comment: code-and-coffee-service-${opt:stage}
          Origins:
            - DomainName: !Sub ${HttpApi}.execute-api.${AWS::Region}.amazonaws.com
              Id: api-gateway
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
            - Id: s3-origin
              DomainName: !GetAtt WebResourcesBucket.DomainName
              S3OriginConfig:
                OriginAccessIdentity: ""
          DefaultCacheBehavior:
            ForwardedValues:
              QueryString: false
            TargetOriginId: s3-origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: !Ref StandardCachePolicy
          Enabled: true
          HttpVersion: http2
          ViewerCertificate:
            AcmCertificateArn: ${env:ACM_CERTIFICATE_ARN}
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          CacheBehaviors:
            - PathPattern: /info/*
              TargetOriginId: api-gateway
              CachePolicyId: !Ref StandardCachePolicy
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - GET
                - HEAD
                - OPTIONS
              CachedMethods:
                - GET
                - HEAD
            - PathPattern: /api/*
              TargetOriginId: api-gateway
              CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              OriginRequestPolicyId: !Ref StandardOriginRequestPolicy
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - HEAD
                - DELETE
                - POST
                - GET
                - OPTIONS
                - PUT
                - PATCH
    StandardCachePolicy:
      Type: AWS::CloudFront::CachePolicy
      Properties:
        CachePolicyConfig:
          MinTTL: 300
          DefaultTTL: 300
          MaxTTL: 300
          Name: code-and-coffee-service-cache-policy-${opt:stage}-${sls:instanceId}
          ParametersInCacheKeyAndForwardedToOrigin:
            CookiesConfig:
              CookieBehavior: none
            EnableAcceptEncodingBrotli: true
            EnableAcceptEncodingGzip: true
            HeadersConfig:
              HeaderBehavior: none
            QueryStringsConfig:
              QueryStringBehavior: none
    StandardOriginRequestPolicy:
      Type: AWS::CloudFront::OriginRequestPolicy
      Properties:
        OriginRequestPolicyConfig:
          Name: StandardOriginRequestPolicy-${opt:stage}-${env:RANDOM_SEED}
          HeadersConfig:
            HeaderBehavior: allExcept
            Headers:
              - Host
          CookiesConfig:
            CookieBehavior: all
          QueryStringsConfig:
            QueryStringBehavior: all
